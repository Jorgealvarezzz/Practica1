#!/bin/bash

# Script para eliminar instancia EC2 y recursos relacionados
# Autor: Infraestructura automatizada
# Fecha: $(date)

set -e  # Salir si hay alg√∫n error

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${RED}üóëÔ∏è Iniciando eliminaci√≥n de instancia EC2...${NC}"

# Verificar si existe el archivo de configuraci√≥n de EC2
if [ ! -f "ec2_config.txt" ]; then
    echo -e "${RED}‚ùå Error: No se encontr√≥ el archivo ec2_config.txt${NC}"
    echo -e "${YELLOW}üí° Aseg√∫rate de haber ejecutado el script de creaci√≥n de EC2 primero${NC}"
    exit 1
fi

# Cargar configuraci√≥n de EC2
source ec2_config.txt

echo -e "${BLUE}üìã Configuraci√≥n cargada:${NC}"
echo -e "   Instance ID: $INSTANCE_ID"
echo -e "   IP P√∫blica: $PUBLIC_IP"
echo -e "   IP Privada: $PRIVATE_IP"
echo -e "   Key Pair: $KEY_PAIR_NAME"
echo -e "   Regi√≥n: $REGION"

# Confirmaci√≥n antes de eliminar
echo -e "${RED}‚ö†Ô∏è ADVERTENCIA: Esta acci√≥n eliminar√° la instancia EC2 y recursos relacionados${NC}"
echo -e "${YELLOW}üìã Recursos que ser√°n eliminados:${NC}"
echo -e "   ‚Ä¢ Instancia EC2: $INSTANCE_ID"
echo -e "   ‚Ä¢ Key Pair: $KEY_PAIR_NAME"
echo -e "   ‚Ä¢ Archivo de clave privada: ${KEY_PAIR_NAME}.pem"
echo -e "   ‚Ä¢ Archivos de configuraci√≥n"
echo ""
read -p "¬øEst√°s seguro de que quieres continuar? (yes/no): " -r
if [[ ! $REPLY =~ ^[Yy][Ee][Ss]$ ]]; then
    echo -e "${YELLOW}‚ùå Operaci√≥n cancelada${NC}"
    exit 0
fi

# Funci√≥n para verificar si la instancia existe
instance_exists() {
    aws ec2 describe-instances \
        --instance-ids $INSTANCE_ID \
        --region $REGION \
        --query 'Reservations[0].Instances[0].State.Name' \
        --output text 2>/dev/null | grep -v "terminated" &>/dev/null
}

# 1. Verificar estado actual de la instancia
echo -e "${YELLOW}üîç Verificando estado de la instancia...${NC}"
if instance_exists; then
    CURRENT_STATE=$(aws ec2 describe-instances \
        --instance-ids $INSTANCE_ID \
        --region $REGION \
        --query 'Reservations[0].Instances[0].State.Name' \
        --output text)
    echo -e "${BLUE}üìä Estado actual de la instancia: $CURRENT_STATE${NC}"
    
    # 2. Terminar la instancia si no est√° ya terminada
    if [ "$CURRENT_STATE" != "terminated" ]; then
        echo -e "${YELLOW}üõë Terminando instancia EC2...${NC}"
        aws ec2 terminate-instances \
            --instance-ids $INSTANCE_ID \
            --region $REGION
        
        echo -e "${YELLOW}‚è≥ Esperando a que la instancia se termine...${NC}"
        aws ec2 wait instance-terminated --instance-ids $INSTANCE_ID --region $REGION
        echo -e "${GREEN}‚úÖ Instancia terminada: $INSTANCE_ID${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è La instancia ya est√° terminada${NC}"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è La instancia no existe o ya est√° terminada${NC}"
fi

# 3. Eliminar Key Pair
echo -e "${YELLOW}üîë Eliminando Key Pair...${NC}"
if aws ec2 describe-key-pairs --key-names $KEY_PAIR_NAME --region $REGION &>/dev/null; then
    aws ec2 delete-key-pair \
        --key-name $KEY_PAIR_NAME \
        --region $REGION
    echo -e "${GREEN}‚úÖ Key Pair eliminado: $KEY_PAIR_NAME${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è Key Pair no encontrado: $KEY_PAIR_NAME${NC}"
fi

# 4. Eliminar archivo de clave privada
echo -e "${YELLOW}üîê Eliminando archivo de clave privada...${NC}"
if [ -f "${KEY_PAIR_NAME}.pem" ]; then
    rm -f ${KEY_PAIR_NAME}.pem
    echo -e "${GREEN}‚úÖ Archivo de clave eliminado: ${KEY_PAIR_NAME}.pem${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è Archivo de clave no encontrado: ${KEY_PAIR_NAME}.pem${NC}"
fi

# 5. Limpiar snapshots de EBS (si los hay)
echo -e "${YELLOW}üíæ Verificando snapshots asociados...${NC}"
SNAPSHOTS=$(aws ec2 describe-snapshots \
    --owner-ids self \
    --region $REGION \
    --query "Snapshots[?Description && contains(Description, '$INSTANCE_ID')].SnapshotId" \
    --output text)

if [ ! -z "$SNAPSHOTS" ]; then
    echo -e "${YELLOW}üóëÔ∏è Eliminando snapshots asociados...${NC}"
    for SNAPSHOT_ID in $SNAPSHOTS; do
        aws ec2 delete-snapshot \
            --snapshot-id $SNAPSHOT_ID \
            --region $REGION
        echo -e "${GREEN}‚úÖ Snapshot eliminado: $SNAPSHOT_ID${NC}"
    done
else
    echo -e "${BLUE}‚ÑπÔ∏è No se encontraron snapshots asociados${NC}"
fi

# 6. Verificar y limpiar vol√∫menes EBS no asociados
echo -e "${YELLOW}üíΩ Verificando vol√∫menes EBS disponibles...${NC}"
AVAILABLE_VOLUMES=$(aws ec2 describe-volumes \
    --region $REGION \
    --filters "Name=status,Values=available" "Name=tag:Name,Values=*${PROJECT_NAME}*" \
    --query 'Volumes[].VolumeId' \
    --output text)

if [ ! -z "$AVAILABLE_VOLUMES" ]; then
    echo -e "${YELLOW}üóëÔ∏è Eliminando vol√∫menes EBS no asociados...${NC}"
    for VOLUME_ID in $AVAILABLE_VOLUMES; do
        aws ec2 delete-volume \
            --volume-id $VOLUME_ID \
            --region $REGION
        echo -e "${GREEN}‚úÖ Volumen EBS eliminado: $VOLUME_ID${NC}"
    done
else
    echo -e "${BLUE}‚ÑπÔ∏è No se encontraron vol√∫menes EBS disponibles para eliminar${NC}"
fi

# 7. Eliminar archivos de configuraci√≥n
echo -e "${YELLOW}üìÑ Eliminando archivos de configuraci√≥n...${NC}"
if [ -f "ec2_config.txt" ]; then
    rm -f ec2_config.txt
    echo -e "${GREEN}‚úÖ Archivo ec2_config.txt eliminado${NC}"
fi

# 8. Mostrar resumen final
echo -e "${GREEN}üéâ ¬°Instancia EC2 y recursos relacionados eliminados exitosamente!${NC}"
echo -e "${GREEN}üìã Recursos eliminados:${NC}"
echo -e "   ‚úÖ Instancia EC2: $INSTANCE_ID"
echo -e "   ‚úÖ Key Pair: $KEY_PAIR_NAME"
echo -e "   ‚úÖ Archivo de clave privada"
echo -e "   ‚úÖ Snapshots asociados (si los hab√≠a)"
echo -e "   ‚úÖ Vol√∫menes EBS disponibles (si los hab√≠a)"
echo -e "   ‚úÖ Archivos de configuraci√≥n"

echo -e "${BLUE}üí° Nota importante:${NC}"
echo -e "   La infraestructura de red (VPC, Subnet, etc.) sigue activa."
echo -e "   Usa el script de eliminaci√≥n de red si tambi√©n quieres eliminarla."

echo -e "${YELLOW}üèÅ Proceso de eliminaci√≥n completado${NC}"